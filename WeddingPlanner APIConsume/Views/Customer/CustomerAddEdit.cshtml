@model WeddingPlanner_APIConsume.Models.CustomersModel
<!-- Confirmation Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm @((Model.CustomerID == null) ? "Submission" : "Update")</h5>
            </div>
            <div class="modal-body">
                Are you sure you want to @((Model.CustomerID == null) ? "submit this customer?" : "update this customer?")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-primary" id="confirmYes">Yes</button>
            </div>
        </div>
    </div>
</div>

<!-- Success Alert -->
<div class="alert alert-success alert-dismissible fade show" role="alert" id="successAlert" style="display:none;">
    <i class="bi bi-check-circle" style="margin-right: 10px;"></i>
    <span id="successMessage"></span>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">@((Model.CustomerID == null) ? "Add Customer" : "Edit Customer")</h5>

        <!-- General Form Elements -->
        <form asp-controller="Customer" asp-action="Save" method="post" id="customerForm">
            <div class="row mb-3">
                <input type="hidden" asp-for="CustomerID" />
                <label for="inputText" class="col-sm-2 col-form-label"><span class="text-danger">*</span>First Name</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="FirstName">
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputText" class="col-sm-2 col-form-label"><span class="text-danger">*</span>Last Name</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="LastName">
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputEmail" class="col-sm-2 col-form-label"><span class="text-danger">*</span>Email</label>
                <div class="col-sm-10">
                    <input type="email" class="form-control" asp-for="Email">
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputNumber" class="col-sm-2 col-form-label"><span class="text-danger">*</span>Contact Number</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="ContactNumber">
                    <span asp-validation-for="ContactNumber" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputText" class="col-sm-2 col-form-label"><span class="text-danger">*</span>Address</label>
                <div class="col-sm-10">
                    <textarea type="text" class="form-control" asp-for="Address"></textarea>
                    <span asp-validation-for="Address" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputText" class="col-sm-2 col-form-label">Preferred Budget</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="PreferredBudget">
                    <span asp-validation-for="PreferredBudget" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label for="inputText" class="col-sm-2 col-form-label">Interested Themes</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="InterestedThemes">
                    <span asp-validation-for="InterestedThemes" class="text-danger"></span>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <button type="button" class="btn btn-success" id="confirmSubmit">
                        @((Model.CustomerID == null) ? "Add" : "Edit")
                    </button>
                    <a class="btn btn-danger" asp-controller="Customer" asp-action="CustomerList">Back</a>
                </div>
            </div>

        </form><!-- End General Form Elements -->

    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
    <script>
        $(document).ready(function () {
            // Show confirmation modal on submit button click
            $('#confirmSubmit').on('click', function () {
                console.log('Confirm Submit button clicked');
                $('#confirmModal').modal('show');
            });

            // If "Yes" is clicked, submit the form
            $('#confirmYes').on('click', function (e) {
                e.preventDefault();

                // Check if form is valid
                var isValid = $('#customerForm').valid();

                if (isValid) {
                    console.log('Form is valid, submitting...');
                    $('#customerForm').submit(); // Submit form if valid
                } else {
                    console.log('Form is invalid, showing error...');
                    $('#errorMessage').text('Please fill out all required fields.').show(); // Show error message
                }
            });

            // Handle form submission
            $('#customerForm').on('submit', function (e) {
                e.preventDefault();

                // Simulate form submission with AJAX (or allow server-side submission)
                $.post($(this).attr('action'), $(this).serialize(), function (response) {
                    $('#confirmModal').modal('hide');

                    // Determine if adding or editing based on CustomerID
                    if ($('input[name="CustomerID"]').val() == 0) {
                        $('#successMessage').text('Customer added successfully!');
                        // Reset form after adding
                        $('#customerForm')[0].reset();
                    } else {
                        $('#successMessage').text('Customer updated successfully!');
                    }

                    // Show the success message
                    $('#successAlert').show();

                    // Hide success message after 2 seconds
                    setTimeout(function () {
                        $('#successAlert').hide();
                        if ($('input[name="CustomerID"]').val() == 0) {
                            location.reload(); // Reload page after adding
                        }
                    }, 2000);
                }).fail(function () {
                    alert('Error occurred while submitting the form.');
                });
            });
        });
    </script>
}
